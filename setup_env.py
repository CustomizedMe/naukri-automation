#!/usr/bin/env python3
"""
Environment Setup Script for Naukri Automation
This script helps you configure the required environment variables.
"""

import os
import getpass

def setup_environment():
    """Interactive setup for environment variables."""
    print("🚀 Naukri Automation Environment Setup")
    print("=" * 50)
    
    # Get login method
    print("\n📋 Available login methods:")
    print("1. Google OAuth (recommended)")
    print("2. Email/Password")
    print("3. OTP (Phone)")
    
    while True:
        choice = input("\n🔐 Select login method (1-3): ").strip()
        if choice == "1":
            login_method = "google"
            break
        elif choice == "2":
            login_method = "email_password"
            break
        elif choice == "3":
            login_method = "otp"
            break
        else:
            print("❌ Invalid choice. Please select 1, 2, or 3.")
    
    print(f"\n✅ Selected: {login_method}")
    
    # Get credentials based on method
    if login_method == "google":
        email = input("📧 Enter your Google email: ").strip()
        if not email:
            print("❌ Email is required for Google login")
            return False
            
    elif login_method == "email_password":
        email = input("📧 Enter your Naukri email: ").strip()
        if not email:
            print("❌ Email is required")
            return False
            
        password = getpass.getpass("🔒 Enter your Naukri password: ")
        if not password:
            print("❌ Password is required")
            return False
            
    elif login_method == "otp":
        phone = input("📱 Enter your phone number (with country code, e.g., +91XXXXXXXXXX): ").strip()
        if not phone:
            print("❌ Phone number is required")
            return False
    
    # Create environment file content
    env_content = f"""# Naukri Automation Environment Variables
# Generated by setup_env.py

# Login Configuration
LOGIN_METHOD={login_method}

"""
    
    if login_method == "google":
        env_content += f"""# For Google Login
GOOGLE_EMAIL={email}

"""
    elif login_method == "email_password":
        env_content += f"""# For Email/Password Login
NAUKRI_EMAIL={email}
NAUKRI_PASSWORD={password}

"""
    elif login_method == "otp":
        env_content += f"""# For OTP Login
PHONE_NUMBER={phone}

"""
    
    # Write to .env file
    try:
        with open('.env', 'w') as f:
            f.write(env_content)
        print(f"\n✅ Environment variables saved to .env file")
        print(f"🔐 Login method: {login_method}")
        
        if login_method == "google":
            print(f"📧 Google email: {email}")
        elif login_method == "email_password":
            print(f"📧 Naukri email: {email}")
            print("🔒 Password: [HIDDEN]")
        elif login_method == "otp":
            print(f"📱 Phone number: {phone}")
            
        print("\n🚀 You can now run: python main.py")
        return True
        
    except Exception as e:
        print(f"❌ Failed to create .env file: {e}")
        return False

def show_current_config():
    """Show current environment configuration."""
    print("\n📋 Current Environment Configuration:")
    print("=" * 40)
    
    login_method = os.getenv("LOGIN_METHOD", "Not set")
    print(f"LOGIN_METHOD: {login_method}")
    
    if login_method == "google":
        email = os.getenv("GOOGLE_EMAIL", "Not set")
        print(f"GOOGLE_EMAIL: {email}")
    elif login_method == "email_password":
        email = os.getenv("NAUKRI_EMAIL", "Not set")
        password = os.getenv("NAUKRI_PASSWORD", "Not set")
        print(f"NAUKRI_EMAIL: {email}")
        print(f"NAUKRI_PASSWORD: {'[SET]' if password != 'Not set' else 'Not set'}")
    elif login_method == "otp":
        phone = os.getenv("PHONE_NUMBER", "Not set")
        print(f"PHONE_NUMBER: {phone}")

if __name__ == "__main__":
    print("🔧 Naukri Automation Environment Setup")
    print("=" * 50)
    
    # Check if .env file exists
    if os.path.exists('.env'):
        print("📄 .env file already exists!")
        choice = input("🔄 Do you want to reconfigure? (y/n): ").strip().lower()
        if choice != 'y':
            show_current_config()
            exit(0)
    
    # Run setup
    if setup_environment():
        print("\n🎉 Setup completed successfully!")
    else:
        print("\n❌ Setup failed. Please try again.")

